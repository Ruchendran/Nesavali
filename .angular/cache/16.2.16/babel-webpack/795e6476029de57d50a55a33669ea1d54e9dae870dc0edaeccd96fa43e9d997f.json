{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(cookie, route) {\n    this.cookie = cookie;\n    this.route = route;\n  }\n  canActivate(route, state) {\n    const fun = () => {\n      if (this.cookie.get('user-auth')) {\n        // console.log(this.)\n        return true;\n      } else {\n        return this.route.navigate(['/auth']);\n      }\n    };\n    return fun();\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.CookieService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","cookie","route","canActivate","state","fun","get","navigate","i0","ɵɵinject","i1","CookieService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Chathruknan\\Desktop\\Nesav\\Nesavali\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private cookie:CookieService,private route:Router){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      const fun = () =>{\n      if(this.cookie.get('user-auth')){\n        // console.log(this.)\n        return true;\n      }\n      else{\n       return this.route.navigate(['/auth']);\n      \n      }\n    }\n      return fun();\n  \n     \n  }\n  \n}\n"],"mappings":";;;AASA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAoB,EAASC,KAAY;IAAzC,KAAAD,MAAM,GAANA,MAAM;IAAuB,KAAAC,KAAK,GAALA,KAAK;EAEtD;EAEAC,WAAWA,CACTD,KAA6B,EAC7BE,KAA0B;IACxB,MAAMC,GAAG,GAAGA,CAAA,KAAK;MACjB,IAAG,IAAI,CAACJ,MAAM,CAACK,GAAG,CAAC,WAAW,CAAC,EAAC;QAC9B;QACA,OAAO,IAAI;OACZ,MACG;QACH,OAAO,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAGxC,CAAC;IACC,OAAOF,GAAG,EAAE;EAGhB;;;uBAtBWN,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATd,SAAS;MAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}