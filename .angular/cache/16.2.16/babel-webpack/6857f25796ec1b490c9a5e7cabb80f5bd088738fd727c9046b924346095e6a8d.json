{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SeoService {\n  constructor(meta, title) {\n    this.meta = meta;\n    this.title = title;\n  }\n  updateMetaData(data) {\n    // console.log(\"data\")\n    if (data) {\n      // console.log(data.seo)\n      const seoData = data.seo;\n      // Update the title\n      this.title.setTitle(seoData.title || '');\n      // Update meta tags\n      if (seoData.metaTags) {\n        // console.log(seoData)\n        seoData.metaTags.forEach(tag => {\n          if (tag.name) {\n            this.meta.updateTag({\n              name: tag.name,\n              content: tag.content\n            });\n          } else {\n            this.meta.updateTag({\n              property: tag.property,\n              content: tag.content\n            });\n          }\n        });\n      }\n    }\n  }\n  static {\n    this.ɵfac = function SeoService_Factory(t) {\n      return new (t || SeoService)(i0.ɵɵinject(i1.Meta), i0.ɵɵinject(i1.Title));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SeoService,\n      factory: SeoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["SeoService","constructor","meta","title","updateMetaData","data","seoData","seo","setTitle","metaTags","forEach","tag","name","updateTag","content","property","i0","ɵɵinject","i1","Meta","Title","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Chathruknan\\Desktop\\Nesav\\Nesavali\\src\\app\\seo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeoService {\n  constructor(private meta: Meta, private title: Title) {}\n\n  updateMetaData(data:any): void {\n    // console.log(\"data\")\n    if (data) {\n      // console.log(data.seo)\n      const seoData = data.seo;\n\n      // Update the title\n      this.title.setTitle(seoData.title || '');\n\n      // Update meta tags\n      if (seoData.metaTags) {\n        // console.log(seoData)\n        \n        seoData.metaTags.forEach((tag: any) => {\n          if(tag.name){\n            this.meta.updateTag({ name: tag.name, content: tag.content });\n         \n          }\n          else{\n           \n            this.meta.updateTag({ property: tag.property, content: tag.content });\n          }\n\n         \n        });\n      }\n    }\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,IAAU,EAAUC,KAAY;IAAhC,KAAAD,IAAI,GAAJA,IAAI;IAAgB,KAAAC,KAAK,GAALA,KAAK;EAAU;EAEvDC,cAAcA,CAACC,IAAQ;IACrB;IACA,IAAIA,IAAI,EAAE;MACR;MACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,GAAG;MAExB;MACA,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACF,OAAO,CAACH,KAAK,IAAI,EAAE,CAAC;MAExC;MACA,IAAIG,OAAO,CAACG,QAAQ,EAAE;QACpB;QAEAH,OAAO,CAACG,QAAQ,CAACC,OAAO,CAAEC,GAAQ,IAAI;UACpC,IAAGA,GAAG,CAACC,IAAI,EAAC;YACV,IAAI,CAACV,IAAI,CAACW,SAAS,CAAC;cAAED,IAAI,EAAED,GAAG,CAACC,IAAI;cAAEE,OAAO,EAAEH,GAAG,CAACG;YAAO,CAAE,CAAC;WAE9D,MACG;YAEF,IAAI,CAACZ,IAAI,CAACW,SAAS,CAAC;cAAEE,QAAQ,EAAEJ,GAAG,CAACI,QAAQ;cAAED,OAAO,EAAEH,GAAG,CAACG;YAAO,CAAE,CAAC;;QAIzE,CAAC,CAAC;;;EAGR;;;uBA9BWd,UAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,IAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAE,KAAA;IAAA;EAAA;;;aAAVpB,UAAU;MAAAqB,OAAA,EAAVrB,UAAU,CAAAsB,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}